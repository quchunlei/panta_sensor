// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto_msg.LidarPacket.proto

#ifndef PROTOBUF_Proto_5fmsg_2eLidarPacket_2eproto__INCLUDED
#define PROTOBUF_Proto_5fmsg_2eLidarPacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Proto_msg {
class LidarPacket;
class LidarPacketDefaultTypeInternal;
extern LidarPacketDefaultTypeInternal _LidarPacket_default_instance_;
}  // namespace Proto_msg

namespace Proto_msg {

namespace protobuf_Proto_5fmsg_2eLidarPacket_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Proto_5fmsg_2eLidarPacket_2eproto

// ===================================================================

class LidarPacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto_msg.LidarPacket) */ {
 public:
  LidarPacket();
  virtual ~LidarPacket();

  LidarPacket(const LidarPacket& from);

  inline LidarPacket& operator=(const LidarPacket& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LidarPacket(LidarPacket&& from) noexcept
    : LidarPacket() {
    *this = ::std::move(from);
  }

  inline LidarPacket& operator=(LidarPacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LidarPacket& default_instance();

  static inline const LidarPacket* internal_default_instance() {
    return reinterpret_cast<const LidarPacket*>(
               &_LidarPacket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LidarPacket* other);
  friend void swap(LidarPacket& a, LidarPacket& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LidarPacket* New() const PROTOBUF_FINAL { return New(NULL); }

  LidarPacket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LidarPacket& from);
  void MergeFrom(const LidarPacket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LidarPacket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional double timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:Proto_msg.LidarPacket)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  double timestamp_;
  friend struct protobuf_Proto_5fmsg_2eLidarPacket_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LidarPacket

// optional double timestamp = 1;
inline bool LidarPacket::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LidarPacket::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LidarPacket::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LidarPacket::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double LidarPacket::timestamp() const {
  // @@protoc_insertion_point(field_get:Proto_msg.LidarPacket.timestamp)
  return timestamp_;
}
inline void LidarPacket::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Proto_msg.LidarPacket.timestamp)
}

// optional bytes data = 2;
inline bool LidarPacket::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LidarPacket::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LidarPacket::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LidarPacket::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& LidarPacket::data() const {
  // @@protoc_insertion_point(field_get:Proto_msg.LidarPacket.data)
  return data_.GetNoArena();
}
inline void LidarPacket::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto_msg.LidarPacket.data)
}
#if LANG_CXX11
inline void LidarPacket::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto_msg.LidarPacket.data)
}
#endif
inline void LidarPacket::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto_msg.LidarPacket.data)
}
inline void LidarPacket::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto_msg.LidarPacket.data)
}
inline ::std::string* LidarPacket::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:Proto_msg.LidarPacket.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LidarPacket::release_data() {
  // @@protoc_insertion_point(field_release:Proto_msg.LidarPacket.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LidarPacket::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:Proto_msg.LidarPacket.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace Proto_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Proto_5fmsg_2eLidarPacket_2eproto__INCLUDED
