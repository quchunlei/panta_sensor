// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto_msg.Odom.proto

#ifndef PROTOBUF_Proto_5fmsg_2eOdom_2eproto__INCLUDED
#define PROTOBUF_Proto_5fmsg_2eOdom_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace Proto_msg {
class Odom;
class OdomDefaultTypeInternal;
extern OdomDefaultTypeInternal _Odom_default_instance_;
}  // namespace Proto_msg

namespace Proto_msg {

namespace protobuf_Proto_5fmsg_2eOdom_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Proto_5fmsg_2eOdom_2eproto

// ===================================================================

class Odom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Proto_msg.Odom) */ {
 public:
  Odom();
  virtual ~Odom();

  Odom(const Odom& from);

  inline Odom& operator=(const Odom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Odom(Odom&& from) noexcept
    : Odom() {
    *this = ::std::move(from);
  }

  inline Odom& operator=(Odom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Odom& default_instance();

  static inline const Odom* internal_default_instance() {
    return reinterpret_cast<const Odom*>(
               &_Odom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Odom* other);
  friend void swap(Odom& a, Odom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Odom* New() const PROTOBUF_FINAL { return New(NULL); }

  Odom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Odom& from);
  void MergeFrom(const Odom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Odom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double linear_vel = 12;
  int linear_vel_size() const;
  void clear_linear_vel();
  static const int kLinearVelFieldNumber = 12;
  double linear_vel(int index) const;
  void set_linear_vel(int index, double value);
  void add_linear_vel(double value);
  const ::google::protobuf::RepeatedField< double >&
      linear_vel() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_linear_vel();

  // repeated double linear_vel_cov = 13;
  int linear_vel_cov_size() const;
  void clear_linear_vel_cov();
  static const int kLinearVelCovFieldNumber = 13;
  double linear_vel_cov(int index) const;
  void set_linear_vel_cov(int index, double value);
  void add_linear_vel_cov(double value);
  const ::google::protobuf::RepeatedField< double >&
      linear_vel_cov() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_linear_vel_cov();

  // optional string parent_frame_id = 3;
  bool has_parent_frame_id() const;
  void clear_parent_frame_id();
  static const int kParentFrameIdFieldNumber = 3;
  const ::std::string& parent_frame_id() const;
  void set_parent_frame_id(const ::std::string& value);
  #if LANG_CXX11
  void set_parent_frame_id(::std::string&& value);
  #endif
  void set_parent_frame_id(const char* value);
  void set_parent_frame_id(const char* value, size_t size);
  ::std::string* mutable_parent_frame_id();
  ::std::string* release_parent_frame_id();
  void set_allocated_parent_frame_id(::std::string* parent_frame_id);

  // optional string frame_id = 4;
  bool has_frame_id() const;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 4;
  const ::std::string& frame_id() const;
  void set_frame_id(const ::std::string& value);
  #if LANG_CXX11
  void set_frame_id(::std::string&& value);
  #endif
  void set_frame_id(const char* value);
  void set_frame_id(const char* value, size_t size);
  ::std::string* mutable_frame_id();
  ::std::string* release_frame_id();
  void set_allocated_frame_id(::std::string* frame_id);

  // optional double timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  double timestamp() const;
  void set_timestamp(double value);

  // optional uint32 seq = 2;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 2;
  ::google::protobuf::uint32 seq() const;
  void set_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Proto_msg.Odom)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_seq();
  void clear_has_seq();
  void set_has_parent_frame_id();
  void clear_has_parent_frame_id();
  void set_has_frame_id();
  void clear_has_frame_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< double > linear_vel_;
  ::google::protobuf::RepeatedField< double > linear_vel_cov_;
  ::google::protobuf::internal::ArenaStringPtr parent_frame_id_;
  ::google::protobuf::internal::ArenaStringPtr frame_id_;
  double timestamp_;
  ::google::protobuf::uint32 seq_;
  friend struct protobuf_Proto_5fmsg_2eOdom_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Odom

// optional double timestamp = 1;
inline bool Odom::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Odom::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Odom::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Odom::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double Odom::timestamp() const {
  // @@protoc_insertion_point(field_get:Proto_msg.Odom.timestamp)
  return timestamp_;
}
inline void Odom::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Proto_msg.Odom.timestamp)
}

// optional uint32 seq = 2;
inline bool Odom::has_seq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Odom::set_has_seq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Odom::clear_has_seq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Odom::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 Odom::seq() const {
  // @@protoc_insertion_point(field_get:Proto_msg.Odom.seq)
  return seq_;
}
inline void Odom::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:Proto_msg.Odom.seq)
}

// optional string parent_frame_id = 3;
inline bool Odom::has_parent_frame_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Odom::set_has_parent_frame_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Odom::clear_has_parent_frame_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Odom::clear_parent_frame_id() {
  parent_frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parent_frame_id();
}
inline const ::std::string& Odom::parent_frame_id() const {
  // @@protoc_insertion_point(field_get:Proto_msg.Odom.parent_frame_id)
  return parent_frame_id_.GetNoArena();
}
inline void Odom::set_parent_frame_id(const ::std::string& value) {
  set_has_parent_frame_id();
  parent_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto_msg.Odom.parent_frame_id)
}
#if LANG_CXX11
inline void Odom::set_parent_frame_id(::std::string&& value) {
  set_has_parent_frame_id();
  parent_frame_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto_msg.Odom.parent_frame_id)
}
#endif
inline void Odom::set_parent_frame_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_parent_frame_id();
  parent_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto_msg.Odom.parent_frame_id)
}
inline void Odom::set_parent_frame_id(const char* value, size_t size) {
  set_has_parent_frame_id();
  parent_frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto_msg.Odom.parent_frame_id)
}
inline ::std::string* Odom::mutable_parent_frame_id() {
  set_has_parent_frame_id();
  // @@protoc_insertion_point(field_mutable:Proto_msg.Odom.parent_frame_id)
  return parent_frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Odom::release_parent_frame_id() {
  // @@protoc_insertion_point(field_release:Proto_msg.Odom.parent_frame_id)
  clear_has_parent_frame_id();
  return parent_frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Odom::set_allocated_parent_frame_id(::std::string* parent_frame_id) {
  if (parent_frame_id != NULL) {
    set_has_parent_frame_id();
  } else {
    clear_has_parent_frame_id();
  }
  parent_frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_frame_id);
  // @@protoc_insertion_point(field_set_allocated:Proto_msg.Odom.parent_frame_id)
}

// optional string frame_id = 4;
inline bool Odom::has_frame_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Odom::set_has_frame_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Odom::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Odom::clear_frame_id() {
  frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_frame_id();
}
inline const ::std::string& Odom::frame_id() const {
  // @@protoc_insertion_point(field_get:Proto_msg.Odom.frame_id)
  return frame_id_.GetNoArena();
}
inline void Odom::set_frame_id(const ::std::string& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Proto_msg.Odom.frame_id)
}
#if LANG_CXX11
inline void Odom::set_frame_id(::std::string&& value) {
  set_has_frame_id();
  frame_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Proto_msg.Odom.frame_id)
}
#endif
inline void Odom::set_frame_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Proto_msg.Odom.frame_id)
}
inline void Odom::set_frame_id(const char* value, size_t size) {
  set_has_frame_id();
  frame_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Proto_msg.Odom.frame_id)
}
inline ::std::string* Odom::mutable_frame_id() {
  set_has_frame_id();
  // @@protoc_insertion_point(field_mutable:Proto_msg.Odom.frame_id)
  return frame_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Odom::release_frame_id() {
  // @@protoc_insertion_point(field_release:Proto_msg.Odom.frame_id)
  clear_has_frame_id();
  return frame_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Odom::set_allocated_frame_id(::std::string* frame_id) {
  if (frame_id != NULL) {
    set_has_frame_id();
  } else {
    clear_has_frame_id();
  }
  frame_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame_id);
  // @@protoc_insertion_point(field_set_allocated:Proto_msg.Odom.frame_id)
}

// repeated double linear_vel = 12;
inline int Odom::linear_vel_size() const {
  return linear_vel_.size();
}
inline void Odom::clear_linear_vel() {
  linear_vel_.Clear();
}
inline double Odom::linear_vel(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Odom.linear_vel)
  return linear_vel_.Get(index);
}
inline void Odom::set_linear_vel(int index, double value) {
  linear_vel_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Odom.linear_vel)
}
inline void Odom::add_linear_vel(double value) {
  linear_vel_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Odom.linear_vel)
}
inline const ::google::protobuf::RepeatedField< double >&
Odom::linear_vel() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Odom.linear_vel)
  return linear_vel_;
}
inline ::google::protobuf::RepeatedField< double >*
Odom::mutable_linear_vel() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Odom.linear_vel)
  return &linear_vel_;
}

// repeated double linear_vel_cov = 13;
inline int Odom::linear_vel_cov_size() const {
  return linear_vel_cov_.size();
}
inline void Odom::clear_linear_vel_cov() {
  linear_vel_cov_.Clear();
}
inline double Odom::linear_vel_cov(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Odom.linear_vel_cov)
  return linear_vel_cov_.Get(index);
}
inline void Odom::set_linear_vel_cov(int index, double value) {
  linear_vel_cov_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Odom.linear_vel_cov)
}
inline void Odom::add_linear_vel_cov(double value) {
  linear_vel_cov_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Odom.linear_vel_cov)
}
inline const ::google::protobuf::RepeatedField< double >&
Odom::linear_vel_cov() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Odom.linear_vel_cov)
  return linear_vel_cov_;
}
inline ::google::protobuf::RepeatedField< double >*
Odom::mutable_linear_vel_cov() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Odom.linear_vel_cov)
  return &linear_vel_cov_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace Proto_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Proto_5fmsg_2eOdom_2eproto__INCLUDED
