// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto_msg.Imu.proto

#ifndef PROTOBUF_Proto_5fmsg_2eImu_2eproto__INCLUDED
#define PROTOBUF_Proto_5fmsg_2eImu_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Proto_msg {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Proto_5fmsg_2eImu_2eproto();
void protobuf_AssignDesc_Proto_5fmsg_2eImu_2eproto();
void protobuf_ShutdownFile_Proto_5fmsg_2eImu_2eproto();

class Imu;

// ===================================================================

class Imu : public ::google::protobuf::Message {
 public:
  Imu();
  virtual ~Imu();

  Imu(const Imu& from);

  inline Imu& operator=(const Imu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Imu& default_instance();

  void Swap(Imu* other);

  // implements Message ----------------------------------------------

  Imu* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Imu& from);
  void MergeFrom(const Imu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline double timestamp() const;
  inline void set_timestamp(double value);

  // optional uint32 seq = 2;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 2;
  inline ::google::protobuf::uint32 seq() const;
  inline void set_seq(::google::protobuf::uint32 value);

  // optional string parent_frame_id = 3;
  inline bool has_parent_frame_id() const;
  inline void clear_parent_frame_id();
  static const int kParentFrameIdFieldNumber = 3;
  inline const ::std::string& parent_frame_id() const;
  inline void set_parent_frame_id(const ::std::string& value);
  inline void set_parent_frame_id(const char* value);
  inline void set_parent_frame_id(const char* value, size_t size);
  inline ::std::string* mutable_parent_frame_id();
  inline ::std::string* release_parent_frame_id();
  inline void set_allocated_parent_frame_id(::std::string* parent_frame_id);

  // optional string frame_id = 4;
  inline bool has_frame_id() const;
  inline void clear_frame_id();
  static const int kFrameIdFieldNumber = 4;
  inline const ::std::string& frame_id() const;
  inline void set_frame_id(const ::std::string& value);
  inline void set_frame_id(const char* value);
  inline void set_frame_id(const char* value, size_t size);
  inline ::std::string* mutable_frame_id();
  inline ::std::string* release_frame_id();
  inline void set_allocated_frame_id(::std::string* frame_id);

  // repeated double orien = 5;
  inline int orien_size() const;
  inline void clear_orien();
  static const int kOrienFieldNumber = 5;
  inline double orien(int index) const;
  inline void set_orien(int index, double value);
  inline void add_orien(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      orien() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_orien();

  // repeated double orien_cov = 6;
  inline int orien_cov_size() const;
  inline void clear_orien_cov();
  static const int kOrienCovFieldNumber = 6;
  inline double orien_cov(int index) const;
  inline void set_orien_cov(int index, double value);
  inline void add_orien_cov(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      orien_cov() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_orien_cov();

  // repeated double angular_vel = 7;
  inline int angular_vel_size() const;
  inline void clear_angular_vel();
  static const int kAngularVelFieldNumber = 7;
  inline double angular_vel(int index) const;
  inline void set_angular_vel(int index, double value);
  inline void add_angular_vel(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      angular_vel() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_angular_vel();

  // repeated double angular_vel_cov = 8;
  inline int angular_vel_cov_size() const;
  inline void clear_angular_vel_cov();
  static const int kAngularVelCovFieldNumber = 8;
  inline double angular_vel_cov(int index) const;
  inline void set_angular_vel_cov(int index, double value);
  inline void add_angular_vel_cov(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      angular_vel_cov() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_angular_vel_cov();

  // repeated double angular_bias_cov = 9;
  inline int angular_bias_cov_size() const;
  inline void clear_angular_bias_cov();
  static const int kAngularBiasCovFieldNumber = 9;
  inline double angular_bias_cov(int index) const;
  inline void set_angular_bias_cov(int index, double value);
  inline void add_angular_bias_cov(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      angular_bias_cov() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_angular_bias_cov();

  // repeated double acc = 10;
  inline int acc_size() const;
  inline void clear_acc();
  static const int kAccFieldNumber = 10;
  inline double acc(int index) const;
  inline void set_acc(int index, double value);
  inline void add_acc(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      acc() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_acc();

  // repeated double acc_cov = 11;
  inline int acc_cov_size() const;
  inline void clear_acc_cov();
  static const int kAccCovFieldNumber = 11;
  inline double acc_cov(int index) const;
  inline void set_acc_cov(int index, double value);
  inline void add_acc_cov(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      acc_cov() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_acc_cov();

  // repeated double acc_bias_cov = 12;
  inline int acc_bias_cov_size() const;
  inline void clear_acc_bias_cov();
  static const int kAccBiasCovFieldNumber = 12;
  inline double acc_bias_cov(int index) const;
  inline void set_acc_bias_cov(int index, double value);
  inline void add_acc_bias_cov(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      acc_bias_cov() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_acc_bias_cov();

  // @@protoc_insertion_point(class_scope:Proto_msg.Imu)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_parent_frame_id();
  inline void clear_has_parent_frame_id();
  inline void set_has_frame_id();
  inline void clear_has_frame_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double timestamp_;
  ::std::string* parent_frame_id_;
  ::std::string* frame_id_;
  ::google::protobuf::RepeatedField< double > orien_;
  ::google::protobuf::RepeatedField< double > orien_cov_;
  ::google::protobuf::RepeatedField< double > angular_vel_;
  ::google::protobuf::RepeatedField< double > angular_vel_cov_;
  ::google::protobuf::RepeatedField< double > angular_bias_cov_;
  ::google::protobuf::RepeatedField< double > acc_;
  ::google::protobuf::RepeatedField< double > acc_cov_;
  ::google::protobuf::RepeatedField< double > acc_bias_cov_;
  ::google::protobuf::uint32 seq_;
  friend void  protobuf_AddDesc_Proto_5fmsg_2eImu_2eproto();
  friend void protobuf_AssignDesc_Proto_5fmsg_2eImu_2eproto();
  friend void protobuf_ShutdownFile_Proto_5fmsg_2eImu_2eproto();

  void InitAsDefaultInstance();
  static Imu* default_instance_;
};
// ===================================================================


// ===================================================================

// Imu

// optional double timestamp = 1;
inline bool Imu::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Imu::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Imu::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Imu::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double Imu::timestamp() const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.timestamp)
  return timestamp_;
}
inline void Imu::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.timestamp)
}

// optional uint32 seq = 2;
inline bool Imu::has_seq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Imu::set_has_seq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Imu::clear_has_seq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Imu::clear_seq() {
  seq_ = 0u;
  clear_has_seq();
}
inline ::google::protobuf::uint32 Imu::seq() const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.seq)
  return seq_;
}
inline void Imu::set_seq(::google::protobuf::uint32 value) {
  set_has_seq();
  seq_ = value;
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.seq)
}

// optional string parent_frame_id = 3;
inline bool Imu::has_parent_frame_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Imu::set_has_parent_frame_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Imu::clear_has_parent_frame_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Imu::clear_parent_frame_id() {
  if (parent_frame_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parent_frame_id_->clear();
  }
  clear_has_parent_frame_id();
}
inline const ::std::string& Imu::parent_frame_id() const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.parent_frame_id)
  return *parent_frame_id_;
}
inline void Imu::set_parent_frame_id(const ::std::string& value) {
  set_has_parent_frame_id();
  if (parent_frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parent_frame_id_ = new ::std::string;
  }
  parent_frame_id_->assign(value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.parent_frame_id)
}
inline void Imu::set_parent_frame_id(const char* value) {
  set_has_parent_frame_id();
  if (parent_frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parent_frame_id_ = new ::std::string;
  }
  parent_frame_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto_msg.Imu.parent_frame_id)
}
inline void Imu::set_parent_frame_id(const char* value, size_t size) {
  set_has_parent_frame_id();
  if (parent_frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parent_frame_id_ = new ::std::string;
  }
  parent_frame_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto_msg.Imu.parent_frame_id)
}
inline ::std::string* Imu::mutable_parent_frame_id() {
  set_has_parent_frame_id();
  if (parent_frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    parent_frame_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto_msg.Imu.parent_frame_id)
  return parent_frame_id_;
}
inline ::std::string* Imu::release_parent_frame_id() {
  clear_has_parent_frame_id();
  if (parent_frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = parent_frame_id_;
    parent_frame_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Imu::set_allocated_parent_frame_id(::std::string* parent_frame_id) {
  if (parent_frame_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete parent_frame_id_;
  }
  if (parent_frame_id) {
    set_has_parent_frame_id();
    parent_frame_id_ = parent_frame_id;
  } else {
    clear_has_parent_frame_id();
    parent_frame_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto_msg.Imu.parent_frame_id)
}

// optional string frame_id = 4;
inline bool Imu::has_frame_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Imu::set_has_frame_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Imu::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Imu::clear_frame_id() {
  if (frame_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    frame_id_->clear();
  }
  clear_has_frame_id();
}
inline const ::std::string& Imu::frame_id() const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.frame_id)
  return *frame_id_;
}
inline void Imu::set_frame_id(const ::std::string& value) {
  set_has_frame_id();
  if (frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    frame_id_ = new ::std::string;
  }
  frame_id_->assign(value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.frame_id)
}
inline void Imu::set_frame_id(const char* value) {
  set_has_frame_id();
  if (frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    frame_id_ = new ::std::string;
  }
  frame_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:Proto_msg.Imu.frame_id)
}
inline void Imu::set_frame_id(const char* value, size_t size) {
  set_has_frame_id();
  if (frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    frame_id_ = new ::std::string;
  }
  frame_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Proto_msg.Imu.frame_id)
}
inline ::std::string* Imu::mutable_frame_id() {
  set_has_frame_id();
  if (frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    frame_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Proto_msg.Imu.frame_id)
  return frame_id_;
}
inline ::std::string* Imu::release_frame_id() {
  clear_has_frame_id();
  if (frame_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = frame_id_;
    frame_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Imu::set_allocated_frame_id(::std::string* frame_id) {
  if (frame_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete frame_id_;
  }
  if (frame_id) {
    set_has_frame_id();
    frame_id_ = frame_id;
  } else {
    clear_has_frame_id();
    frame_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Proto_msg.Imu.frame_id)
}

// repeated double orien = 5;
inline int Imu::orien_size() const {
  return orien_.size();
}
inline void Imu::clear_orien() {
  orien_.Clear();
}
inline double Imu::orien(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.orien)
  return orien_.Get(index);
}
inline void Imu::set_orien(int index, double value) {
  orien_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.orien)
}
inline void Imu::add_orien(double value) {
  orien_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Imu.orien)
}
inline const ::google::protobuf::RepeatedField< double >&
Imu::orien() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Imu.orien)
  return orien_;
}
inline ::google::protobuf::RepeatedField< double >*
Imu::mutable_orien() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Imu.orien)
  return &orien_;
}

// repeated double orien_cov = 6;
inline int Imu::orien_cov_size() const {
  return orien_cov_.size();
}
inline void Imu::clear_orien_cov() {
  orien_cov_.Clear();
}
inline double Imu::orien_cov(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.orien_cov)
  return orien_cov_.Get(index);
}
inline void Imu::set_orien_cov(int index, double value) {
  orien_cov_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.orien_cov)
}
inline void Imu::add_orien_cov(double value) {
  orien_cov_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Imu.orien_cov)
}
inline const ::google::protobuf::RepeatedField< double >&
Imu::orien_cov() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Imu.orien_cov)
  return orien_cov_;
}
inline ::google::protobuf::RepeatedField< double >*
Imu::mutable_orien_cov() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Imu.orien_cov)
  return &orien_cov_;
}

// repeated double angular_vel = 7;
inline int Imu::angular_vel_size() const {
  return angular_vel_.size();
}
inline void Imu::clear_angular_vel() {
  angular_vel_.Clear();
}
inline double Imu::angular_vel(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.angular_vel)
  return angular_vel_.Get(index);
}
inline void Imu::set_angular_vel(int index, double value) {
  angular_vel_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.angular_vel)
}
inline void Imu::add_angular_vel(double value) {
  angular_vel_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Imu.angular_vel)
}
inline const ::google::protobuf::RepeatedField< double >&
Imu::angular_vel() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Imu.angular_vel)
  return angular_vel_;
}
inline ::google::protobuf::RepeatedField< double >*
Imu::mutable_angular_vel() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Imu.angular_vel)
  return &angular_vel_;
}

// repeated double angular_vel_cov = 8;
inline int Imu::angular_vel_cov_size() const {
  return angular_vel_cov_.size();
}
inline void Imu::clear_angular_vel_cov() {
  angular_vel_cov_.Clear();
}
inline double Imu::angular_vel_cov(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.angular_vel_cov)
  return angular_vel_cov_.Get(index);
}
inline void Imu::set_angular_vel_cov(int index, double value) {
  angular_vel_cov_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.angular_vel_cov)
}
inline void Imu::add_angular_vel_cov(double value) {
  angular_vel_cov_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Imu.angular_vel_cov)
}
inline const ::google::protobuf::RepeatedField< double >&
Imu::angular_vel_cov() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Imu.angular_vel_cov)
  return angular_vel_cov_;
}
inline ::google::protobuf::RepeatedField< double >*
Imu::mutable_angular_vel_cov() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Imu.angular_vel_cov)
  return &angular_vel_cov_;
}

// repeated double angular_bias_cov = 9;
inline int Imu::angular_bias_cov_size() const {
  return angular_bias_cov_.size();
}
inline void Imu::clear_angular_bias_cov() {
  angular_bias_cov_.Clear();
}
inline double Imu::angular_bias_cov(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.angular_bias_cov)
  return angular_bias_cov_.Get(index);
}
inline void Imu::set_angular_bias_cov(int index, double value) {
  angular_bias_cov_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.angular_bias_cov)
}
inline void Imu::add_angular_bias_cov(double value) {
  angular_bias_cov_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Imu.angular_bias_cov)
}
inline const ::google::protobuf::RepeatedField< double >&
Imu::angular_bias_cov() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Imu.angular_bias_cov)
  return angular_bias_cov_;
}
inline ::google::protobuf::RepeatedField< double >*
Imu::mutable_angular_bias_cov() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Imu.angular_bias_cov)
  return &angular_bias_cov_;
}

// repeated double acc = 10;
inline int Imu::acc_size() const {
  return acc_.size();
}
inline void Imu::clear_acc() {
  acc_.Clear();
}
inline double Imu::acc(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.acc)
  return acc_.Get(index);
}
inline void Imu::set_acc(int index, double value) {
  acc_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.acc)
}
inline void Imu::add_acc(double value) {
  acc_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Imu.acc)
}
inline const ::google::protobuf::RepeatedField< double >&
Imu::acc() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Imu.acc)
  return acc_;
}
inline ::google::protobuf::RepeatedField< double >*
Imu::mutable_acc() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Imu.acc)
  return &acc_;
}

// repeated double acc_cov = 11;
inline int Imu::acc_cov_size() const {
  return acc_cov_.size();
}
inline void Imu::clear_acc_cov() {
  acc_cov_.Clear();
}
inline double Imu::acc_cov(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.acc_cov)
  return acc_cov_.Get(index);
}
inline void Imu::set_acc_cov(int index, double value) {
  acc_cov_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.acc_cov)
}
inline void Imu::add_acc_cov(double value) {
  acc_cov_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Imu.acc_cov)
}
inline const ::google::protobuf::RepeatedField< double >&
Imu::acc_cov() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Imu.acc_cov)
  return acc_cov_;
}
inline ::google::protobuf::RepeatedField< double >*
Imu::mutable_acc_cov() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Imu.acc_cov)
  return &acc_cov_;
}

// repeated double acc_bias_cov = 12;
inline int Imu::acc_bias_cov_size() const {
  return acc_bias_cov_.size();
}
inline void Imu::clear_acc_bias_cov() {
  acc_bias_cov_.Clear();
}
inline double Imu::acc_bias_cov(int index) const {
  // @@protoc_insertion_point(field_get:Proto_msg.Imu.acc_bias_cov)
  return acc_bias_cov_.Get(index);
}
inline void Imu::set_acc_bias_cov(int index, double value) {
  acc_bias_cov_.Set(index, value);
  // @@protoc_insertion_point(field_set:Proto_msg.Imu.acc_bias_cov)
}
inline void Imu::add_acc_bias_cov(double value) {
  acc_bias_cov_.Add(value);
  // @@protoc_insertion_point(field_add:Proto_msg.Imu.acc_bias_cov)
}
inline const ::google::protobuf::RepeatedField< double >&
Imu::acc_bias_cov() const {
  // @@protoc_insertion_point(field_list:Proto_msg.Imu.acc_bias_cov)
  return acc_bias_cov_;
}
inline ::google::protobuf::RepeatedField< double >*
Imu::mutable_acc_bias_cov() {
  // @@protoc_insertion_point(field_mutable_list:Proto_msg.Imu.acc_bias_cov)
  return &acc_bias_cov_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto_msg

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Proto_5fmsg_2eImu_2eproto__INCLUDED
